import { Address, Cell } from "ton";
import BN from "bn.js";
import { TvmRunner } from "./TvmRunner";
export declare type TVMExecuteConfig = {
    debug: boolean;
    function_selector: number;
    init_stack: TVMStack;
    code: string;
    data: string;
    c7_register: TVMStackEntryTuple;
};
export declare type TVMStack = TVMStackEntry[];
export declare type TVMExecutionResultOk = {
    ok: true;
    exit_code: number;
    gas_consumed: number;
    stack: TVMStack;
    data_cell: string;
    action_list_cell: string;
    logs: string;
};
export declare type TVMExecutionResultFail = {
    ok: false;
    error?: string;
    exit_code?: number;
    logs?: string;
};
export declare type TVMExecutionResult = TVMExecutionResultOk | TVMExecutionResultFail;
export declare type TVMStackEntry = TVMStackEntryNull | TVMStackEntryCell | TVMStackEntryInt | TVMStackEntryCellSlice | TVMStackEntryTuple;
export declare type TVMStackEntryNull = {
    type: 'null';
};
export declare type TVMStackEntryCell = {
    type: 'cell';
    value: string;
};
export declare type TVMStackEntryInt = {
    type: 'int';
    value: string;
};
export declare type TVMStackEntryCellSlice = {
    type: 'cell_slice';
    value: string;
};
export declare type TVMStackEntryTuple = {
    type: 'tuple';
    value: TVMStackEntry[];
};
export declare type C7Config = {
    unixtime?: number;
    balance?: BN;
    myself?: Address;
    randSeed?: BN;
    actions?: number;
    messagesSent?: number;
    blockLt?: number;
    transLt?: number;
    globalConfig?: Cell;
};
export declare function buildC7(config: C7Config): TVMStackEntryTuple;
export declare function runTVM(config: TVMExecuteConfig): Promise<TVMExecutionResult>;
export declare type RunContractConfig = {
    code: Cell;
    dataCell: Cell;
    stack: TVMStack;
    method: string;
    c7: TVMStackEntryTuple;
    debug: boolean;
    executor?: TvmRunner;
};
export declare function runContract(config: RunContractConfig): Promise<TVMExecutionResult>;
export declare function getSelectorForMethod(methodName: string): number;
