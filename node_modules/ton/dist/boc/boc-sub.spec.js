"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const promises_1 = require("fs/promises");
const path_1 = __importDefault(require("path"));
const parse_1 = require("../block/parse");
const Cell_1 = require("./Cell");
describe('boc-sub', () => {
    it('should serialize sub cell', async () => {
        const data = await (0, promises_1.readFile)(path_1.default.resolve(__dirname, '__testdata__', 'accountState.txt'), { encoding: 'utf-8' });
        const dataBuffer = Buffer.from(data, 'base64');
        console.warn('initial');
        const state = Cell_1.Cell.fromBoc(dataBuffer)[0];
        let account = (0, parse_1.parseAccount)(state.beginParse());
        if (account.storage.state.type !== 'active') {
            throw Error('Invalid state');
        }
        // console.warn(account);
        let dt = account.storage.state.state.data;
        // console.warn(dt.toString());
        // console.warn(state);
        let s = dt.toBoc({ idx: false, crc32: false });
        // console.warn(data);
        // console.warn(s.toString('base64'));
        console.warn('secondary');
        let c = Cell_1.Cell.fromBoc(s)[0];
        expect(c.hash().equals(dt.hash())).toBe(true);
    });
});
